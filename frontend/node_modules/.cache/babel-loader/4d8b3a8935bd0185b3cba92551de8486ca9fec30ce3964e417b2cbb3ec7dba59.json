{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/rajnishpalsingh/Documents/me-api-playground/frontend/src/components/HealthCheck.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { api } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HealthCheck = () => {\n  _s();\n  const [status, setStatus] = useState(\"checking\");\n  const [lastChecked, setLastChecked] = useState(null);\n  useEffect(() => {\n    checkHealth();\n    // Check health every 30 seconds\n    const interval = setInterval(checkHealth, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const checkHealth = async () => {\n    try {\n      await api.health();\n      setStatus(\"healthy\");\n      setLastChecked(new Date().toLocaleTimeString());\n    } catch (error) {\n      setStatus(\"unhealthy\");\n      setLastChecked(new Date().toLocaleTimeString());\n    }\n  };\n  const getStatusColor = () => {\n    switch (status) {\n      case \"healthy\":\n        return \"#27ae60\";\n      case \"unhealthy\":\n        return \"#e74c3c\";\n      default:\n        return \"#f39c12\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"0.5rem\",\n      fontSize: \"0.9rem\",\n      color: \"#666\"\n    },\n    children: [\"API Status:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: getStatusColor(),\n        fontWeight: \"bold\"\n      },\n      children: status === \"checking\" ? \"Checking...\" : status.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), lastChecked && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" (Last checked: \", lastChecked, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(HealthCheck, \"iP98q8U5yGmHslzmoOJoroCvmiY=\");\n_c = HealthCheck;\nexport default HealthCheck;\nvar _c;\n$RefreshReg$(_c, \"HealthCheck\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","api","jsxDEV","_jsxDEV","HealthCheck","status","setStatus","lastChecked","setLastChecked","checkHealth","interval","setInterval","clearInterval","health","Date","toLocaleTimeString","error","getStatusColor","style","padding","fontSize","color","children","fontWeight","toUpperCase","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rajnishpalsingh/Documents/me-api-playground/frontend/src/components/HealthCheck.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { api } from \"../utils/api\"\n\nconst HealthCheck = () => {\n  const [status, setStatus] = useState(\"checking\")\n  const [lastChecked, setLastChecked] = useState(null)\n\n  useEffect(() => {\n    checkHealth()\n    // Check health every 30 seconds\n    const interval = setInterval(checkHealth, 30000)\n    return () => clearInterval(interval)\n  }, [])\n\n  const checkHealth = async () => {\n    try {\n      await api.health()\n      setStatus(\"healthy\")\n      setLastChecked(new Date().toLocaleTimeString())\n    } catch (error) {\n      setStatus(\"unhealthy\")\n      setLastChecked(new Date().toLocaleTimeString())\n    }\n  }\n\n  const getStatusColor = () => {\n    switch (status) {\n      case \"healthy\":\n        return \"#27ae60\"\n      case \"unhealthy\":\n        return \"#e74c3c\"\n      default:\n        return \"#f39c12\"\n    }\n  }\n\n  return (\n    <div style={{ padding: \"0.5rem\", fontSize: \"0.9rem\", color: \"#666\" }}>\n      API Status:{\" \"}\n      <span style={{ color: getStatusColor(), fontWeight: \"bold\" }}>\n        {status === \"checking\" ? \"Checking...\" : status.toUpperCase()}\n      </span>\n      {lastChecked && <span> (Last checked: {lastChecked})</span>}\n    </div>\n  )\n}\n\nexport default HealthCheck\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAP,EAAA;EACxB,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,UAAU,CAAC;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdS,WAAW,CAAC,CAAC;IACb;IACA,MAAMC,QAAQ,GAAGC,WAAW,CAACF,WAAW,EAAE,KAAK,CAAC;IAChD,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMR,GAAG,CAACY,MAAM,CAAC,CAAC;MAClBP,SAAS,CAAC,SAAS,CAAC;MACpBE,cAAc,CAAC,IAAIM,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,SAAS,CAAC,WAAW,CAAC;MACtBE,cAAc,CAAC,IAAIM,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAQZ,MAAM;MACZ,KAAK,SAAS;QACZ,OAAO,SAAS;MAClB,KAAK,WAAW;QACd,OAAO,SAAS;MAClB;QACE,OAAO,SAAS;IACpB;EACF,CAAC;EAED,oBACEF,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE,QAAQ;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,GAAC,aACzD,EAAC,GAAG,eACfnB,OAAA;MAAMe,KAAK,EAAE;QAAEG,KAAK,EAAEJ,cAAc,CAAC,CAAC;QAAEM,UAAU,EAAE;MAAO,CAAE;MAAAD,QAAA,EAC1DjB,MAAM,KAAK,UAAU,GAAG,aAAa,GAAGA,MAAM,CAACmB,WAAW,CAAC;IAAC;MAAAC,QAAA,EAAA7B,YAAA;MAAA8B,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,EACNpB,WAAW,iBAAIJ,OAAA;MAAAmB,QAAA,GAAM,kBAAgB,EAACf,WAAW,EAAC,GAAC;IAAA;MAAAkB,QAAA,EAAA7B,YAAA;MAAA8B,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAF,QAAA,EAAA7B,YAAA;IAAA8B,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAAA9B,EAAA,CA1CKO,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA4CjB,eAAeA,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}